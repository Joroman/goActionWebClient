{"version":3,"sources":["app.js","controllers.js","services.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","ChartJsProvider","setOptions","chartColors","responsive","state","url","views","header","templateUrl","controller","content","content@","otherwise","$scope","actionsService","clientsService","getActions","query","res","actions","sort","err","console","log","message","status","statusText","titleDef","actionsDef","titlePros","actionsPro","titleReq","actionsReq","titleRes","actionsRes","table_header","table_header_pros","table_header_req","table_header_res","def","def_color","pros","pros_color","req","req_color","res_color","forEach","action","feedback","response","request","prospection","push","num_def","length","num_pros","num_req","num_res","changeToDefined","changeToProspect","changeToRequest","changeToResponse","$state","setActionsClose","list_actions","list_close","x","sortActionsDate","action_list","list","year","Date","project_start_date","getFullYear","setActionsWIN_LOSE","actionsLoseYear","actionsWinYear","offer_win","numActionsWin","numActionsLose","setDataChart","listActions","type","t","month","count","getMonth","data","table_header_win","table_header_lose","listClose","Array","array","$promise","then","numActionClose","newYear","labels","series","onClick","points","evt","detail","go","id","_id","$stateParams","get","name","description","_client","end_date","start_date","client_name","getStart","save","post","clients","getClients","lenght","clientChose","client","company_name","panelService","salesService","saveSale","sale","contact","_action","project_price","offer_budget","project_margin","offer_margin","sales_date","getSales","setDate","name_state","meeting_date","response_date","date_send","show_act","show_edit","show_create","show_close","current","panels","getPanels","show","showClose","show1","show2","slice","color","textButton","update","saveNew","delete","close","getContacts","contactChose","category","phone","email","direction","city","country","contacts","createClient","returnClients","updateClient","choseClient","indexOf","deleteClient","getClient","updateClientContact","deleteContact","index","splice","newContact","takeContact","joinSalesClient","takeClients","sales","i","v","key","y","options","chart","height","donut","d","showLabels","pie","startAngle","Math","PI","endAngle","duration","legend","margin","top","right","bottom","left","generate","salesClientListSort","colors","top5","value","saleslist","salesObject","m","monthSales","values","clientsList","yearText","respond","listClients","salesClientList","salesList","totalSales","a","b","clipEdge","stacked","xAxis","axisLabel","showMaxMin","tickFormat","d3","format","yAxis","axisLabelDistance","date","dateText","setDataSaleMonth","char_data","chart_value","sales_month","changeYear","createArrayData","sales_list","year_sales","setFullYear","toString","$rootScope","ngDialog","AuthFactory","loggedIn","username","isAuthenticated","getUsername","openLogin","open","template","scope","className","logOut","logout","$on","stateis","curstate","is","$localStorage","loginData","getObject","doLogin","rememberMe","storeObject","login","openRegister","register","doRegister","registration","constant","service","$resource","baseURL","this","method","icon","title","text","collapse","factory","$window","store","localStorage","defaultValue","remove","removeItem","JSON","stringify","parse","$http","storeUserCredentials","credentials","TOKEN_KEY","useCredentials","authToken","token","defaults","headers","common","destroyUserCredentials","undefined","authFac","$broadcast","openConfirm","plain","registerData","password"],"mappings":"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","file":"app.min.js","sourcesContent":["angular.module('myApp', ['ui.router','ngResource','nvd3',\"chart.js\",'ngDialog'])\r\n    .config(['$stateProvider','$urlRouterProvider','ChartJsProvider',function($stateProvider, $urlRouterProvider,ChartJsProvider) {\r\n\r\n     // Configure all line charts\r\n    ChartJsProvider.setOptions('line', {\r\n      chartColors: ['#5cb85c','#FF7E67'],\r\n      responsive: true\r\n    });\r\n\r\n    // route for the home page\r\n        $stateProvider\r\n            .state('app', {\r\n                url:'/',\r\n                views:{\r\n                    'header':{\r\n                        templateUrl:'views/header.html',\r\n                         controller  : 'HeaderController'\r\n                    },\r\n                    'content':{\r\n                        templateUrl :'views/home.html',\r\n                        controller  :'HeaderController'\r\n                    }\r\n                }\r\n            })\r\n            .state('app.activeActions',{\r\n                url:'active',\r\n                views:{\r\n                    'content@':{\r\n                        templateUrl :'views/active_actions.html',\r\n                        controller  :'ActionsController'\r\n                    }\r\n                }\r\n            })\r\n\r\n            .state ('app.getStartAction',{\r\n                url:'getStart',\r\n                views:{\r\n                    'content@':{\r\n                        templateUrl :'views/getstart_action.html',\r\n                        controller  :'GetStartController'\r\n                    }\r\n                }\r\n            })\r\n\r\n            .state('app.editAction',{\r\n                url:'defined/:id',\r\n                views:{\r\n                    'content@':{\r\n                        templateUrl :'views/edit_action.html',\r\n                        controller  :'EditActionController'\r\n                    }\r\n                }\r\n            })\r\n            .state('app.editPros',{\r\n                url:'prospection/:id',\r\n                views:{\r\n                    'content@':{\r\n                        templateUrl :'views/edit_pros.html',\r\n                        controller  :'EditActionController'\r\n                    }\r\n                }\r\n            })\r\n            .state('app.editReq',{\r\n                url:'request/:id',\r\n                views:{\r\n                    'content@':{\r\n                        templateUrl :'views/edit_req.html',\r\n                        controller  :'EditActionController'\r\n                    }\r\n                }\r\n            })\r\n            .state('app.editRes',{\r\n                url:'respond:id',\r\n                views:{\r\n                    'content@':{\r\n                        templateUrl :'views/edit_res.html',\r\n                        controller  :'EditActionController'\r\n                    }\r\n                }\r\n            })\r\n\r\n          .state('app.closeActions',{\r\n                url:'close',\r\n                views:{\r\n                    'content@':{\r\n                        templateUrl :'views/close_actions.html',\r\n                        controller  :'CloseActionController'\r\n                    }\r\n                }\r\n            })\r\n\r\n            .state('app.closeActions.detail',{\r\n                url:'detail:id',\r\n                views:{\r\n                    'content@':{\r\n                        templateUrl :'views/close_detail.html',\r\n                        controller  :'CloseDetailController'\r\n                    }\r\n                }\r\n            })\r\n\r\n\r\n            .state('app.clients',{\r\n                url:'clients',\r\n                views:{\r\n                    'content@':{\r\n                        templateUrl :'views/clients.html',\r\n                        controller  :'ClientsController'\r\n                    }\r\n                }\r\n            })\r\n            .state('app.clients.contacts',{\r\n                url:'contacts:id',\r\n                views:{\r\n                    'content@':{\r\n                        templateUrl :'views/contacts.html',\r\n                        controller  :'ContactsController'\r\n                    }\r\n                }\r\n            })\r\n            .state('app.sales',{\r\n                url:'sales',\r\n                views:{\r\n                    'content@':{\r\n                        templateUrl:'views/sales.html',\r\n                        controller:'SalesControllerDonut'\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n\r\n        $urlRouterProvider.otherwise('/');\r\n    }]);\r\n","angular.module('myApp')\r\n\r\n    .controller('ActionsController',['$scope','actionsService','clientsService',function($scope, actionsService,clientsService) {\r\n\r\n    //GET ALL ACTIONS OPERATION\r\n        actionsService.getActions().query(\r\n            function(res){\r\n                $scope.actions=res;\r\n                sort();\r\n            },function(err){\r\n                console.log(\"aqui es.\");\r\n                $scope.message='Error'+err.status+ \"\"+err.statusText;\r\n        });\r\n\r\n    //DEFINE VARIBLES\r\n        $scope.titleDef     =\"Defined Actions\";\r\n        $scope.actionsDef   =[];\r\n        $scope.titlePros    =\"Prospect Actions\";\r\n        $scope.actionsPro   =[];\r\n        $scope.titleReq     =\"Request Acitons\";\r\n        $scope.actionsReq   =[];\r\n        $scope.titleRes     =\"Response Actions\";\r\n        $scope.actionsRes   =[];\r\n\r\n        //table Header\r\n        $scope.table_header     =[\"Create Action\",\"Action Name\",\"Client\",\"Finish Date\",\"Detail\"];\r\n\r\n        $scope.table_header_pros=[\"Action Name\",'Client','Contact','Objective','Meeting','Detail'];\r\n\r\n        $scope.table_header_req=['Action Name','Client','Contact','Service/Product','Estimate Budget','Date Response','Detail'];\r\n\r\n        $scope.table_header_res=['Client', 'Offer Name', 'Offer Document','Offer budget', 'Offer margin', 'Send Date','Detail'];\r\n\r\n\r\n        //to manage ng show\r\n        $scope.def=true;\r\n        $scope.def_color='panel-success';\r\n        $scope.pros=false;\r\n        $scope.pros_color='panel-info';\r\n        $scope.req=false;\r\n        $scope.req_color='panel-info';\r\n        $scope.res=false;\r\n        $scope.res_color='panel-info';\r\n\r\n\r\n        //SORT FUNCTION\r\n\r\n        var sort= function(){\r\n              angular.forEach($scope.actions, function(action){\r\n                  //ACTIVE ACTIONS DEFINED ACTIONS\r\n                    if (action.feedback==null && action.response==null && action.request==null && action.prospection==null){\r\n                              $scope.actionsDef.push(action);\r\n                    }\r\n                // ACTIVE ACTIONS PORSPECTION ACTIONS\r\n                    if (action.feedback==null && action.response==null && action.request==null && action.prospection!=null){\r\n                            $scope.actionsPro.push(action);\r\n                    }\r\n                // ACTIVE ACTIONS REQUEST ACTION\r\n                    if (action.feedback==null && action.response==null && action.request!=null && action.prospection!=null){\r\n                            $scope.actionsReq.push(action);\r\n                    }\r\n                //ACTIVE ACTIONS RESPONSE ACTION\r\n                    if (action.feedback==null && action.response!=null && action.request!=null && action.prospection!=null){\r\n                            $scope.actionsRes.push(action);\r\n                    }\r\n\r\n              });\r\n                //Guardamos la contidad de actions de cada collection\r\n                $scope.num_def  =$scope.actionsDef.length;\r\n                $scope.num_pros =$scope.actionsPro.length;\r\n                $scope.num_req  =$scope.actionsReq.length;\r\n                $scope.num_res  =$scope.actionsRes.length;\r\n\r\n            };\r\n\r\n    // SHOW FUNCTIONS\r\n        $scope.changeToDefined  =function(){\r\n            $scope.def=true;\r\n            $scope.def_color='panel-success';\r\n            $scope.pros=false;\r\n            $scope.pros_color='panel-info';\r\n            $scope.req=false;\r\n            $scope.req_color='panel-info';\r\n            $scope.res=false;\r\n            $scope.res_color='panel-info';\r\n        };\r\n        $scope.changeToProspect =function(){\r\n            $scope.def=false;\r\n            $scope.def_color='panel-info';\r\n            $scope.pros=true;\r\n            $scope.pros_color='panel-success';\r\n            $scope.req=false;\r\n            $scope.req_color='panel-info';\r\n            $scope.res=false;\r\n            $scope.res_color='panel-info';\r\n        };\r\n        $scope.changeToRequest  =function(){\r\n            $scope.def=false;\r\n            $scope.def_color='panel-info';\r\n            $scope.pros=false;\r\n            $scope.pros_color='panel-info';\r\n            $scope.req=true;\r\n            $scope.req_color='panel-success';\r\n            $scope.res=false;\r\n            $scope.res_color='panel-info';\r\n        };\r\n        $scope.changeToResponse =function(){\r\n            $scope.def=false;\r\n            $scope.def_color='panel-info';\r\n            $scope.pros=false;\r\n            $scope.pros_color='panel-info';\r\n            $scope.req=false;\r\n            $scope.req_color='panel-info';\r\n            $scope.res=true;\r\n            $scope.res_color='panel-success';\r\n        };\r\n\r\n\r\n    }])\r\n\r\n    .controller('CloseActionController',['$scope','actionsService','$state',function($scope,actionsService,$state){\r\n\r\n        $scope.table_header_win =[\"Date Sale\",\"Client\",\"Contact\",\"Import\",\"Marign\",'Details'];\r\n\r\n        $scope.table_header_lose= [\"Close Date\", \"Client\", \"Contact\",\"Details\"];\r\n\r\n        var listClose           =[];\r\n        $scope.actionsLoseYear  =[];\r\n        $scope.actionsWinYear   =[];\r\n        $scope.year             = new Date().getFullYear();\r\n        $scope.data             = new Array(2);\r\n        $scope.data             = createArrayData($scope.data);\r\n\r\n\r\n        actionsService.getActions().query().$promise\r\n            .then(function(res){\r\n                //list action close\r\n                listClose=setActionsClose(res);\r\n\r\n                //list action close for year\r\n                listClose=sortActionsDate(listClose);\r\n                $scope.numActionClose= listClose.length;\r\n\r\n                //list action close win or lose\r\n                setActionsWIN_LOSE(listClose);\r\n\r\n                //number action lose and win the specific year\r\n\r\n\r\n                //set $scope.data for a chart representation\r\n                setDataChart($scope.actionsWinYear,true);\r\n                setDataChart($scope.actionsLoseYear,false);\r\n\r\n                console.log('SORT');\r\n                console.log($scope.actionsWinYear);\r\n                console.log($scope.actionsLoseYear);\r\n            },\r\n            function(res){\r\n                 $scope.message = \"Error: \"+response.status + \" \" + response.statusText;\r\n        });\r\n\r\n\r\n        //getActionsClose\r\n        function setActionsClose(list_actions){\r\n            var list_close= [];\r\n            for(var x=0; x<list_actions.length;x++){\r\n                 if(list_actions[x].feedback!= null){\r\n                     list_close.push(list_actions[x]);\r\n                 }\r\n            }\r\n            return list_close;\r\n        }\r\n\r\n        //get actions close of the corresponding year\r\n          function sortActionsDate(action_list){\r\n            var list=[];\r\n            console.log(\"AÑO :\" +$scope.year);\r\n            console.log(action_list);\r\n\r\n            for (var x = 0; x< action_list.length; x++){\r\n                if($scope.year === new Date(action_list[x].feedback.project_start_date).getFullYear()){\r\n                    list.push(action_list[x]);\r\n                    console.log(\"entro\");\r\n                }\r\n            }\r\n            console.log(list);\r\n            return(list);\r\n        }\r\n\r\n\r\n\r\n        //get action list win or lose\r\n        function setActionsWIN_LOSE(list_close){\r\n            var list_action_type    =[];\r\n            $scope.actionsLoseYear  =[];\r\n            $scope.actionsWinYear   =[];\r\n\r\n            if(list_close.length>0){\r\n                for(var x=0;x<list_close.length;x++){\r\n\r\n                    if (list_close[x].feedback.offer_win === true){\r\n                       $scope.actionsWinYear.push(list_close[x]);\r\n                    }else{\r\n                        $scope.actionsLoseYear.push(list_close[x]);\r\n                    }\r\n                }\r\n                $scope.numActionsWin  = $scope.actionsWinYear.length;\r\n                $scope.numActionsLose  = $scope.actionsLoseYear.length;\r\n            }else{\r\n                $scope.numActionsWin  = 0;\r\n                $scope.numActionsLose  = 0;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        //WHEN YOU CHANGE THE YEAR I HAVE TO RE BUILD THE GRAPH.\r\n        $scope.newYear= function(){\r\n               actionsService.getActions().query().$promise\r\n                    .then(function(res){\r\n\r\n                        $scope.year= new Date($scope.year).getFullYear();\r\n\r\n                         //list action close\r\n                        listClose=setActionsClose(res);\r\n\r\n                        //list action close for year\r\n\r\n                        listClose=sortActionsDate(listClose);\r\n                         $scope.numActionClose= listClose.length;\r\n\r\n                        //list action close win or lose\r\n                        setActionsWIN_LOSE(listClose);\r\n\r\n                        //set $scope.data for a chart representation\r\n                        setDataChart($scope.actionsWinYear,true);\r\n                        setDataChart($scope.actionsLoseYear,false);\r\n\r\n                        console.log('SORT 2');\r\n                        console.log($scope.actionsWinYear);\r\n                        console.log($scope.actionsLoseYear);\r\n                    },\r\n                    function(res){\r\n                         $scope.message = \"Error: \"+response.status + \" \" + response.statusText;\r\n                });\r\n\r\n        };\r\n\r\n        //GRAPH SHOWS THE NUMNER OF ACTIONS CLOSE (WIN AND LOSE)\r\n\r\n        function createArrayData(array){\r\n            for (var x=0; x<2;x++){\r\n                array[x] = new Array(12);\r\n            }\r\n\r\n            return array;\r\n        }\r\n\r\n        //Set $scope.data[][] array for the chart\r\n        function setDataChart (listActions,type){\r\n\r\n            var t;\r\n\r\n            if(type == true){\r\n                t=0;\r\n            }else{\r\n                t=1;\r\n            }\r\n\r\n            for ( var month =0 ;month<12;month++){\r\n                var count=0;\r\n                for (var x=0; x< listActions.length;x++ ){\r\n                    if(month === new Date (listActions[x].feedback.project_start_date).getMonth()){\r\n                        count++;\r\n                    }\r\n                }\r\n                $scope.data[t][month]=count;\r\n            }\r\n\r\n            console.log (\"data ....\");\r\n            console.log ($scope.data);\r\n        }\r\n\r\n        //CHART OBJECT CHART.JS TO SET IN ORDER TO SHOW THE GRAPH\r\n\r\n        $scope.labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\"August\",\"September\",\"October\",\"November\",\"Dicember\"];\r\n        $scope.series = ['Actions Win', 'Actions Lose'];\r\n        $scope.onClick = function (points, evt) {\r\n            console.log(points, evt);\r\n        };\r\n\r\n\r\n        //go to detail close action\r\n        $scope.detail = function (action){\r\n            $state.go('app.closeActions.detail',{id:action._id});\r\n        };\r\n\r\n\r\n    }])\r\n\r\n    .controller('CloseDetailController',['$scope','actionsService','$stateParams',function($scope,actionsService,$stateParams){\r\n\r\n        //GET the id action with $stateParams\r\n        if(!$stateParams.id)$scope.id=0;\r\n        else $scope.id=$stateParams.id;\r\n\r\n\r\n        //GET operation\r\n        actionsService.getActions().get({id:$scope.id},function(res){\r\n                $scope.action=res;\r\n\r\n                console.log($scope.action);\r\n        });\r\n\r\n\r\n\r\n    }])\r\n\r\n\r\n    .controller('GetStartController',['$scope','$state','actionsService','clientsService',function($scope,$state,actionsService,clientsService){\r\n\r\n      $scope.action={name:\"\",description:\"\",_client: \"\",end_date:new Date(),start_date:new Date(),client_name:\"\"};\r\n      $scope.getStart=true;\r\n\r\n        $scope.save =function(){\r\n            console.log(\"action\");\r\n            console.log($scope.action);\r\n            actionsService.getActions().post($scope.action,\r\n                function(res){\r\n                  $state.go('app.activeActions');\r\n            });\r\n        };\r\n\r\n        $scope.clients=clientsService.getClients().query(function(res){\r\n            $scope.clients=res;\r\n            if($scope.clients.length>0)\r\n              $scope.getStart=true;\r\n            if($scope.clients.lenght<0)\r\n              $scope.getStart=false;\r\n        });\r\n\r\n\r\n\r\n        //get all the clients and present to the modal\r\n        $scope.getClients = function(){\r\n            clientsService.getClients().query(function(res){\r\n                $scope.clients=res;\r\n\r\n                if($scope.clients.length>0)\r\n                  $scope.getStart=true;\r\n            });\r\n\r\n          //Take the client selected form the modal\r\n          $scope.clientChose = function(client){\r\n              $scope.client=client;\r\n              $scope.action.client_name=client.company_name;\r\n              $scope.action._client=client._id;\r\n          };\r\n\r\n        };\r\n\r\n    }])\r\n\r\n    .controller('EditActionController',['$state','$scope','actionsService','panelService','$stateParams','salesService','clientsService',\r\n                                        function($state,$scope,actionsService,panelService,$stateParams,salesService,clientsService){\r\n\r\n        $scope.show_act     = true;\r\n        $scope.show_edit    = false;\r\n        $scope.show_create  = false;\r\n        $scope.show_close   = false;\r\n\r\n\r\n\r\n\r\n        //GET the current state\r\n         $scope.name_state   = $state.current.name;\r\n\r\n         //GET the id action with $stateParams\r\n        if(!$stateParams.id)$scope.id=0;\r\n        else $scope.id=$stateParams.id;\r\n\r\n\r\n        console.log($scope.id);\r\n        console.log($stateParams);\r\n\r\n\r\n        //PANELS INFO\r\n        var panels =panelService.getPanels();\r\n\r\n\r\n        //SHOW METHODS\r\n        $scope.show = function(){\r\n            $scope.show_act     =false;\r\n            $scope.show_edit    =true;\r\n            $scope.show_create  =false;\r\n            $scope.show_close   =false;\r\n\r\n        };\r\n        $scope.showClose=function(){\r\n            $scope.show_act     =false;\r\n            $scope.show_edit    =false;\r\n            $scope.show_create  =false;\r\n            $scope.show_close   =true;\r\n        };\r\n        $scope.show1= function(){\r\n            $scope.show_act     =true;\r\n            $scope.show_edit    =false;\r\n            $scope.show_create  =false;\r\n            $scope.show_close   =false;\r\n        };\r\n        $scope.show2= function(){\r\n            $scope.show_act     =false;\r\n            $scope.show_edit    =false;\r\n            $scope.show_create  =true;\r\n            $scope.show_close   =false;\r\n        };\r\n\r\n\r\n      //SEE THE STATE TO CONFIGURE DE PANELS\r\n        if($scope.name_state==\"app.editAction\")\r\n        {\r\n            $scope.panels           =panels.slice(0,2);\r\n            $scope.panels[0].color  ='panel-info';\r\n            $scope.panels[0].show   = $scope.show1;\r\n            $scope.panels[1].color  ='panel-success';\r\n            $scope.panels[1].show   = $scope.show2;\r\n            $scope.textButton       ='Edit Defined';\r\n        }\r\n        if($scope.name_state==\"app.editPros\")\r\n        {\r\n            $scope.panels           =panels.slice(0,3);\r\n            $scope.panels[0].color  ='panel-info';\r\n            $scope.panels[0].show   = $scope.show1;\r\n            $scope.panels[1].color  ='panel-info';\r\n            $scope.panels[1].show   = $scope.show1;\r\n            $scope.panels[2].color  ='panel-success';\r\n            $scope.panels[2].show   = $scope.show2;\r\n            $scope.textButton       ='Edit Prospect';\r\n        }\r\n        if($scope.name_state==\"app.editReq\")\r\n        {\r\n            $scope.panels           =panels;\r\n            $scope.panels[0].color='panel-info';\r\n            $scope.panels[0].show   = $scope.show1;\r\n            $scope.panels[1].color='panel-info';\r\n            $scope.panels[1].show   = $scope.show1;\r\n            $scope.panels[2].color='panel-info';\r\n            $scope.panels[2].show   = $scope.show1;\r\n            $scope.panels[3].color='panel-success';\r\n            $scope.panels[3].show   = $scope.show2;\r\n            $scope.textButton       ='Edit Request';\r\n        }\r\n        if($scope.name_state==\"app.editRes\")\r\n        {\r\n            $scope.panels           =panels;\r\n            $scope.panels[0].color  ='panel-info';\r\n            $scope.panels[0].show   = $scope.show1;\r\n            $scope.panels[1].color  ='panel-info';\r\n            $scope.panels[1].show   = $scope.show1;\r\n            $scope.panels[2].color  ='panel-info';\r\n            $scope.panels[2].show   = $scope.show1;\r\n            $scope.panels[3].color  ='panel-info';\r\n            $scope.panels[3].show   = $scope.show1;\r\n            $scope.textButton       ='Edit Response';\r\n\r\n         }\r\n\r\n         //GET operation\r\n        actionsService.getActions().get({id:$scope.id},function(res){\r\n                $scope.action=res;\r\n                console.log($scope.action);\r\n                $scope.action= setDate($scope.action);\r\n\r\n                console.log(\"action with date\");\r\n                console.log($scope.action);\r\n        });\r\n\r\n        //PUT operation\r\n        $scope.update = function(){\r\n           actionsService.getActions().update({id:$scope.id},$scope.action);\r\n        };\r\n\r\n        //DELET AND POST operations\r\n        $scope.saveNew = function(){\r\n            actionsService.getActions().delete({id:$scope.id},\r\n            function(){\r\n                actionsService.getActions().post($scope.action,\r\n                function(){\r\n                    if($scope.name_state==\"app.editAction\")\r\n                        {$state.go('app.editPros',{id:$scope.id});}\r\n                    if($scope.name_state==\"app.editPros\")\r\n                        {$state.go('app.editReq',{id:$scope.id});}\r\n                    if($scope.name_state==\"app.editReq\")\r\n                         {$state.go('app.editRes',{id:$scope.id});}\r\n                    if($scope.name_state==\"app.editRes\")\r\n                         {$state.go('app.closeActions');}\r\n                });\r\n            });\r\n        };\r\n\r\n        //CLOSE ACTION\r\n        $scope.close = function(){\r\n\r\n            if($scope.name_state!=\"app.editRes\"){\r\n                $scope.action.feedback.offer_win=false;\r\n                $scope.action.feedback.project_start_date=new Date();\r\n            }else{\r\n                if($scope.action.feedback.offer_win==\"false\"){\r\n                      $scope.action.feedback.project_start_date=new Date();\r\n                }\r\n            }\r\n            actionsService.getActions().delete({id:$scope.id},function(){\r\n                actionsService.getActions().post($scope.action, function(response){\r\n                    if(response.feedback.offer_win === true){\r\n                        console.log(\"entre para grabar sales\");\r\n                        saveSale(response);\r\n                        $state.go('app.closeActions');\r\n                    }else{\r\n                        $state.go('app.closeActions');\r\n                    }\r\n\r\n                });\r\n\r\n            });\r\n        };\r\n\r\n        function saveSale(action){\r\n           var sale ={};\r\n            sale.contact        =action.prospection.contact;\r\n            sale._action        =action._id;\r\n            sale.project_price  =action.response.offer_budget;\r\n            sale.project_margin =action.response.offer_margin;\r\n            sale.sales_date     =action.feedback.project_start_date;\r\n\r\n            clientsService.getClients().get({id:action._client},function(res){\r\n\r\n                sale._client= res.company_name;\r\n                console.log('apunto del post sales');\r\n                console.log(res);\r\n                console.log(sale);\r\n                salesService.getSales().post(sale,function(res){\r\n                    console.log(res);\r\n                    $state.go('app.closeActions');\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n\r\n        function setDate (action){\r\n            if($scope.name_state==\"app.editAction\"){\r\n                $scope.action.start_date    = new Date (action.start_date);\r\n                $scope.action.end_date      = new Date (action.end_date);\r\n            }\r\n\r\n            if($scope.name_state==\"app.editPros\"){\r\n                $scope.action.start_date    = new Date (action.start_date);\r\n                $scope.action.end_date      = new Date (action.end_date);\r\n                $scope.action.prospection.meeting_date = new Date(action.prospection.meeting_date);\r\n            }\r\n\r\n            if($scope.name_state==\"app.editReq\"){\r\n                $scope.action.start_date    = new Date (action.start_date);\r\n                $scope.action.end_date      = new Date (action.end_date);\r\n                $scope.action.prospection.meeting_date  = new Date(action.prospection.meeting_date);\r\n                $scope.action.request.response_date     = new Date (action.request.response_date);\r\n            }\r\n\r\n            if($scope.name_state==\"app.editRes\"){\r\n                $scope.action.start_date    = new Date (action.start_date);\r\n                $scope.action.end_date      = new Date (action.end_date);\r\n                $scope.action.prospection.meeting_date  = new Date(action.prospection.meeting_date);\r\n                $scope.action.request.response_date     = new Date (action.request.response_date);\r\n                $scope.action.response.date_send        = new Date(action.response.date_send);\r\n                $scope.action.feedback  ={};\r\n                $scope.action.feedback.offer_win        =\"false\";\r\n                console.log( $scope.action.feedback.offer_win);\r\n\r\n            }\r\n\r\n\r\n            return action;\r\n        }\r\n\r\n        $scope.getContacts = function(){\r\n\r\n             clientsService.getClients().get({id:$scope.action._client},function(res){\r\n                $scope.client=res;\r\n            });\r\n        };\r\n        $scope.contactChose = function(contact){\r\n            $scope.action.prospection={};\r\n            $scope.action.prospection.contact= contact.name + \" \" + contact.category+\" \"+ contact.phone + \" \" + contact.email;\r\n        };\r\n\r\n    }])\r\n\r\n    .controller('ClientsController',['$scope','clientsService',function($scope,clientsService){\r\n       $scope.client={\r\n                    _id:\"0\",\r\n            company_name  :\"\",\r\n            direction     :\"\",\r\n            city          :\"\",\r\n            country       :\"\",\r\n            phone         :\"\",\r\n            email         :\"\",\r\n            contacts:[]\r\n            };\r\n        //GET CLIENTS\r\n        clientsService.getClients().query(\r\n            function(res){\r\n                $scope.clients=res;\r\n                  console.log($scope.clients);\r\n\r\n        });\r\n\r\n        console.log($scope.clients);\r\n\r\n        // POST NEW CLIENT\r\n        $scope.createClient = function(){\r\n\r\n            clientsService.getClients().save($scope.client);\r\n            //update the clien list with the new client\r\n            $scope.returnClients();\r\n        };\r\n\r\n        //UPDATE CLIENT\r\n        $scope.updateClient = function(id){\r\n            clientsService.getClients().update({id:id},$scope.client, function(){\r\n                clientsService.getClients().query(function(res){\r\n                   $scope.clients=res;\r\n                });\r\n            });\r\n        };\r\n\r\n        //CHOSE CLIENT\r\n        $scope.choseClient = function(client){\r\n\r\n            var id = $scope.clients.indexOf(client);\r\n\r\n             $scope.client = $scope.clients[id];\r\n\r\n         };\r\n\r\n        //RETURN CLIENT\r\n        $scope.returnClients = function(){\r\n\r\n            //update the clien list with the new client\r\n            clientsService.getClients().query(function(res){\r\n                $scope.clients=res;\r\n                $scope.client={};\r\n            });\r\n\r\n         };\r\n\r\n\r\n        // FALTA DELETE NEW CLIENT\r\n\r\n       $scope.deleteClient = function(){\r\n           clientsService.getClients().delete({id:$scope.client._id},function(){\r\n               clientsService.getClients().query(function(res){\r\n                   $scope.clients=res;\r\n                   $scope.client={};\r\n               });\r\n           });\r\n\r\n       };\r\n\r\n    }])\r\n\r\n    .controller('ContactsController',['$scope','clientsService','$stateParams',function($scope,clientsService,$stateParams){\r\n\r\n        //TAKE THE ID OF THE CLIENT\r\n        if(!$stateParams.id)$scope.id=0;\r\n        else $scope.id=$stateParams.id;\r\n\r\n        //GET THE CLIENT\r\n           $scope.client=clientsService.getClients().get({id:$scope.id})\r\n               .$promise.then(\r\n                function(res){\r\n                    $scope.client=res;\r\n                    },\r\n                function(response) {\r\n                    $scope.message = \"Error: \"+response.status + \" \" + response.statusText;\r\n                    }\r\n                );\r\n\r\n        //GET CLIENT\r\n        $scope.getClient = function(){\r\n\r\n        $scope.client=clientsService.getClients().get({id:$scope.id})\r\n                .$promise.then(\r\n                    function(res){\r\n                        $scope.client=res;\r\n                        },\r\n                    function(response) {\r\n                        $scope.message = \"Error: \"+response.status + \" \" + response.statusText;\r\n                        }\r\n                );\r\n        };\r\n\r\n        console.log('CLIENT CONTACTS');\r\n        console.log($scope.client);\r\n\r\n        //UPDATE CLIENT PUT operation\r\n        $scope.updateClientContact = function(){\r\n            console.log('UPDATE COntact Client');\r\n            console.log($scope.client);\r\n\r\n            clientsService.getClients().update({id:$scope.id},$scope.client);\r\n        };\r\n\r\n        //DELETE CONTACT\r\n        $scope.deleteContact    = function(){\r\n            if($scope.contact!=null){\r\n                var index=$scope.client.contacts.indexOf($scope.contact);\r\n                console.log(\"CONTACTA\");console.log($scope.contact);\r\n                console.log(\"CLIENT\"); console.log($scope.client);\r\n                console.log(index);\r\n\r\n                if(index != -1){\r\n                    $scope.client.contacts.splice(index,1);\r\n                    //put operation\r\n\r\n                    console.log($scope.id);\r\n                    clientsService.getClients().update({id:$scope.id},$scope.client);\r\n                    $scope.contact={};\r\n                }\r\n\r\n            }\r\n\r\n        };\r\n\r\n        //NEW CONTACT (1 DELETE deleteCliente and POST createNewClientContact with the contact)\r\n        $scope.newContact = function(){\r\n            //si el cliente no tiene ningun contacto crear array contact para despues realizar el push de su primer contacto.\r\n            if($scope.client.contacts==null){$scope.client.contacts=[];}\r\n\r\n            $scope.client.contacts.push($scope.contact);\r\n\r\n            clientsService.getClients().delete({id:$scope.id},function(){\r\n                clientsService.getClients().save($scope.client,function(res){\r\n                    $scope.client=res;\r\n                    $scope.contact={};\r\n\r\n                });\r\n            });\r\n        };\r\n\r\n        $scope.takeContact=function(contact){\r\n            $scope.contact=contact;\r\n        };\r\n\r\n    }])\r\n\r\n    .controller('SalesControllerDonut',['$scope','salesService','clientsService',function($scope,salesService,clientsService){\r\n\r\n    $scope.data = [];\r\n    $scope.year= new Date();\r\n        //GET SALES\r\n        salesService.getSales().query().$promise.then(\r\n                function(response){\r\n                    var clientsList = takeClients(response);\r\n                    joinSalesClient(response, clientsList);\r\n                       console.log(\"OLLLLLLLEEEEEEEEEEEE\");\r\n                    },\r\n                function(response) {\r\n                    $scope.message = \"Error: \"+response.status + \" \" + response.statusText;\r\n                    }\r\n        );\r\n\r\n         var takeClients = function(sales){\r\n            var list=[];\r\n             if(sales.length>0){\r\n                 for(var x =0; x< sales.length; x++){\r\n                     if(list.indexOf(sales[x]._client)==-1){\r\n                         list.push(sales[x]._client);\r\n                     }\r\n\r\n                 }\r\n            }\r\n            console.log(\"lista clientes\");\r\n            console.log(list);\r\n            return list;\r\n        };\r\n\r\n\r\n        var joinSalesClient = function(sales, clients) {\r\n            for(var i=0; i<clients.length;i++){\r\n                var v=0;\r\n\r\n                for(var x=0; x<sales.length;x++){\r\n\r\n\r\n                    if(clients[i].indexOf(sales[x]._client) != -1 )\r\n                    {\r\n                        if($scope.year.getFullYear() === new Date(sales[x].sales_date).getFullYear()){\r\n                        console.log($scope.year.getFullYear());\r\n                        console.log(new Date(sales[x].sales_date).getFullYear());\r\n\r\n                            v=v+sales[x].project_price;\r\n                            console.log(v);\r\n                        }\r\n                    }\r\n                }\r\n                if(v>0){\r\n                    console.log(clients[i]);\r\n                    $scope.data.push({key:clients[i],y:v});\r\n                }\r\n\r\n            }\r\n\r\n\r\n        };\r\n\r\n\r\n        //GRÁFICO DONUT\r\n        $scope.options = {\r\n            chart: {\r\n                type: 'pieChart',\r\n                height: 350,\r\n                donut: true,\r\n                x: function(d){return d.key;},\r\n                y: function(d){return d.y;},\r\n                showLabels: true,\r\n\r\n                pie: {\r\n                    startAngle: function(d) { return d.startAngle -Math.PI },\r\n                    endAngle: function(d) { return d.endAngle -Math.PI }\r\n                },\r\n                duration: 500,\r\n                legend: {\r\n                    margin: {\r\n                        top: 10,\r\n                        right: 50,\r\n                        bottom: 10,\r\n                        left: 0\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n    }])\r\n\r\n    .controller('SalesAreaCharController',['$scope','salesService',function($scope,salesService){\r\n\r\n        var clientsList=[];\r\n        $scope.year= new Date();\r\n        $scope.yearText = $scope.year.getFullYear();\r\n\r\n        //get sales\r\n        salesService.getSales().query().$promise.then(\r\n        function(response){\r\n            var salesClientListSort;\r\n            console.log('sales:::');\r\n            console.log (response);\r\n            clientsList         =takeClients(response);\r\n            salesClientListSort =joinSalesClient(response, clientsList);\r\n            $scope.data=generate(salesClientListSort);\r\n        },\r\n        function(respond){\r\n             $scope.message = \"Error: \"+response.status + \" \" + response.statusText;\r\n        });\r\n\r\n\r\n        //take a list of clients from del sales array.\r\n        //indexOf() -1 element not found\r\n        var takeClients = function(sales){\r\n            var list=[];\r\n             console.log(\"lista clientes0000\");\r\n             if(sales.length>0){\r\n                  console.log(\"lista clientes1111\");\r\n                 for(var x =0; x< sales.length; x++){\r\n                     if(list.indexOf(sales[x]._client)==-1){\r\n                         list.push(sales[x]._client);\r\n                     }\r\n                 }\r\n            }\r\n            console.log(\"lista clientes22222\");\r\n            console.log(list);\r\n            return list;\r\n        };\r\n\r\n        //1. I have to group the diferent object sale with its client name\r\n        //2. summ all the sales of the client\r\n        //3. sort array\r\n        //saleClientListSort (clientname,totalsales,array [sales]);\r\n        var joinSalesClient = function(sales, listClients){\r\n            var salesClientListSort=[];\r\n            var salesClientList  =[];\r\n            var project_price   = 0;\r\n            var salesList       =[];\r\n\r\n            if(listClients.length>0){\r\n                for(var x=0; x < listClients.length; x++ ){\r\n                    //borramos para volver a guardar\r\n                    project_price=0;\r\n                    salesList =[];\r\n\r\n                    for (var y=0; y < sales.length ; y++){\r\n\r\n                        if(listClients[x] === sales[y]._client && $scope.year.getFullYear() === new Date(sales[y].sales_date).getFullYear()){\r\n\r\n                            project_price = project_price + sales[y].project_price;\r\n                            salesList.push(sales[y]);\r\n\r\n                        }\r\n                    }\r\n\r\n                    salesClientList.push({client:listClients[x],totalSales:project_price,salesObject:salesList});\r\n                }\r\n            //array sort higher sales.\r\n              // var  salesClientListSort = salesClientList.sort((a,b)=> Number (b.totalSales) - Number(a.totalSales));\r\n                 salesClientListSort = salesClientList.sort(function(a,b){return b.totalSales - a.totalSales;});\r\n            }\r\n            console.log('SalesClientList:');\r\n            console.log(salesClientList);\r\n\r\n            return salesClientListSort;\r\n        };\r\n        // Sales grahpic the x is time y have to agrup the sales for month\r\n        function generate(salesClientListSort){\r\n         // data = [{key:nombre cliente, color:#hfha, values:[{x:mes,y:sales_moth}]}] x el array es de 12 como los meses\r\n        //  {key:salesClientListSort[0].client, color:'#bcbd22',values:values0}\r\n            var data    = [];\r\n            var colors  = [\"#bcbd22\",\"#1f77b4\",\"#5cb85c\",\"#FF7E67\",\"#f0ad4e\"];\r\n            var top5    = 0;\r\n\r\n            if(salesClientListSort.length!=-1){\r\n                 top5=salesClientListSort.length;\r\n            }\r\n            if(top5 > 5){\r\n                top5=5;\r\n            }\r\n            //top 5\r\n            for(var y=0; y<top5; y++){\r\n            var value=[];\r\n            var saleslist =salesClientListSort[y].salesObject;\r\n\r\n                for (var m=0; m<=11;){\r\n                var monthSales=0;\r\n                    for (var x=0; x< saleslist.length;x++){\r\n                        console.log(new Date (saleslist[x].sales_date).getMonth());\r\n\r\n                        if( m === new Date (saleslist[x].sales_date).getMonth()){\r\n                            monthSales= monthSales + saleslist[x].project_price;\r\n                        }\r\n                    }\r\n                    m++;\r\n                    value.push({x:m,y:monthSales});\r\n                }\r\n                data[y]= {key:salesClientListSort[y].client,color:colors[y],values:value};\r\n\r\n            }\r\n             console.log(data);\r\n            return data;\r\n        }\r\n\r\n        $scope.getSales = function(){\r\n\r\n            $scope.year= new Date($scope.yearText);\r\n            console.log (\"entroo\" + $scope.year);\r\n            salesService.getSales().query().$promise.then(\r\n                function(response){\r\n                    var salesClientListSort;\r\n                    console.log('sales:::');\r\n                    console.log (response);\r\n                    clientsList         =takeClients(response);\r\n                    salesClientListSort =joinSalesClient(response, clientsList);\r\n                    $scope.data=generate(salesClientListSort);\r\n                },\r\n                function(respond){\r\n                     $scope.message = \"Error: \"+response.status + \" \" + response.statusText;\r\n            });\r\n\r\n        };\r\n\r\n\r\n        //top 5 clients\r\n        $scope.options = {\r\n            chart: {\r\n                type: 'multiBarChart',\r\n                height: 450,\r\n                margin : {\r\n                    top: 50,\r\n                    right: 20,\r\n                    bottom: 45,\r\n                    left: 80\r\n                },\r\n                clipEdge: true,\r\n                //staggerLabels: true,\r\n                duration: 500,\r\n                stacked: true,\r\n                xAxis: {\r\n                    axisLabel: 'Month',\r\n                    showMaxMin: false,\r\n                    tickFormat: function(d){\r\n                        return d3.format(',f')(d);\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    axisLabel: 'Sales',\r\n                    axisLabelDistance: -20,\r\n                    tickFormat: function(d){\r\n                        return d3.format(',.1f')(d);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n    }])\r\n\r\n    .controller('SalesControllerLineChart',['$scope','salesService',function($scope,salesService){\r\n         //$scope.data=[{key:ventas,values:[x:mes,y:suma ventas mes]}]\r\n        $scope.data=[];\r\n        $scope.date=new Date();\r\n        $scope.dateText= $scope.date.getFullYear();\r\n\r\n        //get sales\r\n        salesService.getSales().query().$promise.then(\r\n            function(response){\r\n             $scope.data=setDataSaleMonth(response);\r\n            },\r\n            function(response){\r\n                 $scope.message = \"Error: \"+response.status + \" \" + response.statusText;\r\n            });\r\n\r\n        // moth sales\r\n        var setDataSaleMonth = function(sales){\r\n            var char_data =[];\r\n            var chart_value=[];\r\n            for (var m=0; m <=11;){\r\n            var sales_month=0;\r\n                for (var y=0; y<sales.length; y++){\r\n                    if(m === new Date(sales[y].sales_date).getMonth() && $scope.date.getFullYear() === new Date(sales[y].sales_date).getFullYear()){\r\n                        sales_month= sales_month + sales[y].project_price;\r\n                    }\r\n                }\r\n               m++;\r\n            chart_value.push({x:m,y:sales_month});\r\n           }\r\n             char_data.push({key:'Sales', \"color\":'#5cb85c',values:chart_value});\r\n            return char_data;\r\n        };\r\n\r\n        $scope.changeYear = function(){\r\n            //get sales year\r\n\r\n            salesService.getSales().query().$promise.then(\r\n                function(response){\r\n                $scope.date= new Date($scope.dateText);\r\n                $scope.data=setDataSaleMonth(response);\r\n                },\r\n                function(response){\r\n                     $scope.message = \"Error: \"+response.status + \" \" + response.statusText;\r\n                });\r\n        };\r\n\r\n\r\n        $scope.options = {\r\n            chart: {\r\n                type: 'multiBarChart',\r\n                height: 400,\r\n                margin : {\r\n                    top: 50,\r\n                    right: 20,\r\n                    bottom: 45,\r\n                    left: 80\r\n                },\r\n                clipEdge: true,\r\n                //staggerLabels: true,\r\n                duration: 500,\r\n                stacked: true,\r\n                xAxis: {\r\n                    axisLabel: 'Month',\r\n                    showMaxMin: false,\r\n                    tickFormat: function(d){\r\n                        return d3.format(',f')(d);\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    axisLabel: 'Sales',\r\n                    axisLabelDistance: -20,\r\n                    tickFormat: function(d){\r\n                        return d3.format(',.1f')(d);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        //$scope.data=[{key:ventas,values:[x:mes,y:suma ventas mes]}]\r\n\r\n    }])\r\n\r\n    .controller('SalesChartController',['$scope','salesService',function($scope,salesService){\r\n\r\n        $scope.year         = new Date().getFullYear();\r\n\r\n        //CHART OBJECT CHART.JS TO SET IN ORDER TO SHOW THE GRAPH\r\n        $scope.labels       = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\"August\",\"September\",\"October\",\"November\",\"Dicember\"];\r\n        $scope.data         = new Array(2);\r\n        $scope.data         = createArrayData($scope.data);\r\n        $scope.series       = [];\r\n        $scope.onClick      = function (points, evt) {\r\n            console.log(points, evt);\r\n        };\r\n\r\n        //get sales\r\n        salesService.getSales().query().$promise.then(\r\n            function(res){\r\n              $scope.data =setDataSaleMonth(res);\r\n            },function(res){\r\n                $scope.message = \"Error: \"+response.status + \" \" + response.statusText;\r\n            });\r\n\r\n\r\n\r\n        //set de sales of the selected year and de year befaore\r\n        var setDataSaleMonth = function(sales_list){\r\n            var sales           = new Array(2);\r\n            sales               = createArrayData($scope.data);\r\n            var year_sales      = new Date();\r\n            year_sales.setFullYear($scope.year);\r\n\r\n            for (var i=0; i<2;i++){\r\n\r\n                for (var m=0; m <=11;m++){\r\n\r\n                    var sales_month=0;\r\n                    for (var y=0; y<sales_list.length; y++){\r\n                        if(m === new Date(sales_list[y].sales_date).getMonth() && year_sales.getFullYear() === new Date(sales_list[y].sales_date).getFullYear()){\r\n                            sales_month= sales_month + sales_list[y].project_price;\r\n                        }\r\n                    }\r\n                    sales[i][m]=sales_month;\r\n               }\r\n                $scope.series.push(year_sales.getFullYear().toString());\r\n                year_sales.setFullYear(year_sales.getFullYear()-1);\r\n            }\r\n            return sales;\r\n        };\r\n\r\n        //create a array matrix 2x12\r\n         function createArrayData(array){\r\n            for (var x=0; x<2;x++){\r\n                array[x] = new Array(12);\r\n            }\r\n\r\n            return array;\r\n        }\r\n\r\n        $scope.changeYear = function(){\r\n              //get sales\r\n        salesService.getSales().query().$promise.then(\r\n            function(res){\r\n              $scope.data =setDataSaleMonth(res);\r\n            },function(res){\r\n                $scope.message = \"Error: \"+response.status + \" \" + response.statusText;\r\n            });\r\n\r\n        };\r\n    }])\r\n\r\n.controller('HeaderController', ['$scope', '$state', '$rootScope', 'ngDialog', 'AuthFactory', function ($scope, $state, $rootScope, ngDialog, AuthFactory) {\r\n\r\n    $scope.loggedIn = false;\r\n    $scope.username = '';\r\n\r\n    if(AuthFactory.isAuthenticated()) {\r\n        $scope.loggedIn = true;\r\n        $scope.username = AuthFactory.getUsername();\r\n    }\r\n\r\n    $scope.openLogin = function () {\r\n        ngDialog.open({ template: 'views/login.html', scope: $scope, className: 'ngdialog-theme-default', controller:\"LoginController\" });\r\n    };\r\n\r\n    $scope.logOut = function() {\r\n       AuthFactory.logout();\r\n        $scope.loggedIn = false;\r\n        $scope.username = '';\r\n    };\r\n\r\n    $rootScope.$on('login:Successful', function () {\r\n        $scope.loggedIn = AuthFactory.isAuthenticated();\r\n        $scope.username = AuthFactory.getUsername();\r\n    });\r\n\r\n    $rootScope.$on('registration:Successful', function () {\r\n        $scope.loggedIn = AuthFactory.isAuthenticated();\r\n        $scope.username = AuthFactory.getUsername();\r\n    });\r\n\r\n    $scope.stateis = function(curstate) {\r\n       return $state.is(curstate);\r\n    };\r\n\r\n}])\r\n\r\n.controller('LoginController', ['$scope', 'ngDialog', '$localStorage', 'AuthFactory', function ($scope, ngDialog, $localStorage, AuthFactory) {\r\n\r\n    $scope.loginData = $localStorage.getObject('userinfo','{}');\r\n\r\n    $scope.doLogin = function() {\r\n        if($scope.rememberMe)\r\n           $localStorage.storeObject('userinfo',$scope.loginData);\r\n\r\n        AuthFactory.login($scope.loginData);\r\n\r\n        ngDialog.close();\r\n\r\n    };\r\n\r\n    $scope.openRegister = function () {\r\n        ngDialog.open({ template: 'views/register.html', scope: $scope, className: 'ngdialog-theme-default', controller:\"RegisterController\" });\r\n    };\r\n\r\n}])\r\n\r\n.controller('RegisterController', ['$scope', 'ngDialog', '$localStorage', 'AuthFactory', function ($scope, ngDialog, $localStorage, AuthFactory) {\r\n\r\n    $scope.register={};\r\n    $scope.loginData={};\r\n\r\n    $scope.doRegister = function() {\r\n        console.log('Doing registration', $scope.registration);\r\n\r\n        AuthFactory.register($scope.registration);\r\n\r\n        ngDialog.close();\r\n\r\n    };\r\n}])\r\n;\r\n","angular.module('myApp')\r\n  .constant(\"baseURL\",\"http://ec2-35-158-94-35.eu-central-1.compute.amazonaws.com:8080/\")\r\n\r\n    .service('actionsService',['$resource','baseURL',function($resource,baseURL){\r\n        this.getActions=function(){\r\n           return $resource(baseURL+'actions/:id',null,{\r\n               'update' :{method:'PUT'},\r\n               'post'   :{method:'POST'}\r\n           });\r\n        };\r\n\r\n    }])\r\n\r\n    .service('panelService',function(){\r\n        this.getPanels = function(){\r\n            var panels=[\r\n                {\r\n                    id:0,\r\n                    icon:'fa fa-comment-o fa-4x',\r\n                    title:'Define Action',\r\n                    text:'This is the first step of the cycle. You have to describe the action that you have in mind and choose the client that you want to make the action. Also put a dead line for all the cycle.',\r\n                    collapse:'collapseOne',\r\n                },\r\n                {\r\n                    id:1,\r\n                    icon:'glyphicon glyphicon-earphone fa-4x',\r\n                    title:'Prospect Action',\r\n                    text:'Prospection is the second step of the cycle. In this phase the objective is to set  a meeting with a client to present our products or services. First of all think about the meeting objective and the strategy. What and why would you like to present or expose the products/services to the client?.¿Why the client would buy your porducts?.... Second you have to chose from the client the concret contact for the action. When you chose the contact you will see all the information you need to concret a meeting. To finish this phase you will have to stablish the meeting with the contact an fullfill  the field (meeting date). If you can arrenge the meeting close the action',\r\n                    collapse:'collapseTwo'\r\n                },\r\n                {\r\n                    id:2,\r\n                    icon:'glyphicon glyphicon-import fa-4x',\r\n                    title:'Request Action',\r\n                    text:'Now you made the meeting with the client. So If the client request some product or service or you have seen an oportunity is time to resum the meeting and after start to prepare the offer. If the client not want anythig now close the action and explain your feelings.',\r\n                    collapse:'collapseThree'\r\n                },\r\n                {\r\n                    id:3,\r\n                    icon:'glyphicon glyphicon-send fa-4x',\r\n                    title:'Response Action',\r\n                    text:'Response, in this phase you have to update information about the concret offer for the client. You update the offer, the budget, the margin ... If finally it is not possbile to develop the offer for any reasons close the action and set the feedback. If you send the offer, the client say to you if you are the winner or not. So you have to close the action and update the information fullfill the fields. If all the process go well and you win a sale you can see in the sales section',\r\n                    collapse:'collapseFour'\r\n                }\r\n            ];\r\n            return  panels;\r\n        };\r\n\r\n    })\r\n\r\n    .service('clientsService',['$resource','baseURL',function($resource,baseURL){\r\n        this.getClients = function(){\r\n            return $resource(baseURL+'clients/:id',null,{\r\n                'update' :{method:'PUT'}\r\n            });\r\n        };\r\n\r\n    }])\r\n\r\n    .service('salesService',['$resource','baseURL',function($resource,baseURL){\r\n        this.getSales = function(){\r\n            return $resource(baseURL+'sales/:id',null,{\r\n                'post'   :{method:'POST'}});\r\n        };\r\n    }])\r\n\r\n.factory('$localStorage', ['$window', function ($window) {\r\n    return {\r\n        store: function (key, value) {\r\n            $window.localStorage[key] = value;\r\n        },\r\n        get: function (key, defaultValue) {\r\n            return $window.localStorage[key] || defaultValue;\r\n        },\r\n        remove: function (key) {\r\n            $window.localStorage.removeItem(key);\r\n        },\r\n        storeObject: function (key, value) {\r\n            $window.localStorage[key] = JSON.stringify(value);\r\n        },\r\n        getObject: function (key, defaultValue) {\r\n            return JSON.parse($window.localStorage[key] || defaultValue);\r\n        }\r\n    };\r\n}])\r\n\r\n.factory('AuthFactory', ['$resource', '$http', '$localStorage', '$rootScope', '$window', 'baseURL', 'ngDialog','$state', function($resource, $http, $localStorage, $rootScope, $window, baseURL, ngDialog,$state){\r\n\r\n    var authFac = {};\r\n    var TOKEN_KEY = 'Token';\r\n    var isAuthenticated = false;\r\n    var username = '';\r\n    var authToken = undefined;\r\n\r\n\r\n  function loadUserCredentials() {\r\n    var credentials = $localStorage.getObject(TOKEN_KEY,'{}');\r\n    if (credentials.username != undefined) {\r\n      useCredentials(credentials);\r\n    }\r\n  }\r\n\r\n  function storeUserCredentials(credentials) {\r\n    $localStorage.storeObject(TOKEN_KEY, credentials);\r\n    useCredentials(credentials);\r\n  }\r\n\r\n  function useCredentials(credentials) {\r\n    isAuthenticated = true;\r\n    username = credentials.username;\r\n    authToken = credentials.token;\r\n\r\n    // Set the token as header for your requests!\r\n    $http.defaults.headers.common['x-access-token'] = authToken;\r\n  }\r\n\r\n  function destroyUserCredentials() {\r\n    authToken = undefined;\r\n    username = '';\r\n    isAuthenticated = false;\r\n    $http.defaults.headers.common['x-access-token'] = authToken;\r\n    $localStorage.remove(TOKEN_KEY);\r\n  }\r\n\r\n    authFac.login = function(loginData) {\r\n\r\n        $resource(baseURL + \"users/login\")\r\n        .save(loginData,\r\n           function(response) {\r\n              storeUserCredentials({username:loginData.username, token: response.token});\r\n              $rootScope.$broadcast('login:Successful');\r\n              $state.go('app.activeActions');\r\n           },\r\n           function(response){\r\n              isAuthenticated = false;\r\n\r\n              var message = '\\<div class=\"ngdialog-message\">\\<div><h3>Login Unsuccessful</h3></div>' +'<div><p>' +  response.data.err.message + '</p><p>' + response.data.err.name + '</p></div>' +'<div class=\"ngdialog-buttons\">\\<button type=\"button\" class=\"ngdialog-button ngdialog-button-primary\" ng-click=confirm(\"OK\")>OK</button>\\</div>';\r\n\r\n                ngDialog.openConfirm({ template: message, plain: 'true'});\r\n           }\r\n\r\n        );\r\n\r\n    };\r\n\r\n    authFac.logout = function() {\r\n        $resource(baseURL + \"users/logout\").get(function(response){\r\n        });\r\n        destroyUserCredentials();\r\n    };\r\n\r\n    authFac.register = function(registerData) {\r\n\r\n        $resource(baseURL + \"users/register\")\r\n        .save(registerData,\r\n           function(response) {\r\n              authFac.login({username:registerData.username, password:registerData.password});\r\n            if (registerData.rememberMe) {\r\n                $localStorage.storeObject('userinfo',\r\n                    {username:registerData.username, password:registerData.password});\r\n            }\r\n\r\n              $rootScope.$broadcast('registration:Successful');\r\n           },\r\n           function(response){\r\n            var message = '\\<div class=\"ngdialog-message\">\\<div><h3>Registration Unsuccessful</h3></div>' +\r\n                  '<div><p>' +  response.data.err.message +\r\n                  '</p><p>' + response.data.err.name + '</p></div>';\r\n\r\n                ngDialog.openConfirm({ template: message, plain: 'true'});\r\n\r\n           }\r\n\r\n        );\r\n    };\r\n\r\n    authFac.isAuthenticated = function() {\r\n        return isAuthenticated;\r\n    };\r\n\r\n    authFac.getUsername = function() {\r\n        return username;\r\n    };\r\n\r\n    loadUserCredentials();\r\n\r\n    return authFac;\r\n\r\n}])\r\n;\r\n"]}